{"ast":null,"code":"import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from '../actions/todos';\nimport { RECEIVE_DATA } from '../actions/shared';\nexport default function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat([action.todo]);\n\n    case REMOVE_TODO:\n      return state.filter(function (todo) {\n        return todo.id !== action.id;\n      });\n\n    case TOGGLE_TODO:\n      return state.map(function (todo) {\n        return todo.id !== action.id ? todo : Object.assign({}, todo, {\n          complete: !todo.complete\n        });\n      });\n\n    case RECEIVE_DATA:\n      return action.todos;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/lukemiller/Desktop/Luke/React/Redux/goals-todos/src/reducers/todos.js"],"names":["ADD_TODO","REMOVE_TODO","TOGGLE_TODO","RECEIVE_DATA","todos","state","action","type","concat","todo","filter","id","map","Object","assign","complete"],"mappings":"AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,WAHJ,QAIO,kBAJP;AAKA,SACIC,YADJ,QAEO,mBAFP;AAIA,eAAe,SAASC,KAAT,GAAoC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,QAAL;AACI,aAAOK,KAAK,CAACG,MAAN,CAAa,CAACF,MAAM,CAACG,IAAR,CAAb,CAAP;;AACJ,SAAKR,WAAL;AACI,aAAOI,KAAK,CAACK,MAAN,CAAa,UAACD,IAAD;AAAA,eAAUA,IAAI,CAACE,EAAL,KAAYL,MAAM,CAACK,EAA7B;AAAA,OAAb,CAAP;;AACJ,SAAKT,WAAL;AACI,aAAOG,KAAK,CAACO,GAAN,CAAU,UAACH,IAAD;AAAA,eAAUA,IAAI,CAACE,EAAL,KAAYL,MAAM,CAACK,EAAnB,GAAwBF,IAAxB,GAC3BI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,IAAlB,EAAwB;AAACM,UAAAA,QAAQ,EAAE,CAACN,IAAI,CAACM;AAAjB,SAAxB,CADiB;AAAA,OAAV,CAAP;;AAGJ,SAAKZ,YAAL;AACI,aAAOG,MAAM,CAACF,KAAd;;AACJ;AACI,aAAOC,KAAP;AAZR;AAcH","sourcesContent":["import {\n    ADD_TODO,\n    REMOVE_TODO,\n    TOGGLE_TODO\n} from '../actions/todos'\nimport{\n    RECEIVE_DATA\n} from '../actions/shared'\n\nexport default function todos (state = [], action) {\n    switch(action.type) {\n        case ADD_TODO :\n            return state.concat([action.todo])\n        case REMOVE_TODO :\n            return state.filter((todo) => todo.id !== action.id)\n        case TOGGLE_TODO :\n            return state.map((todo) => todo.id !== action.id ? todo :\n            Object.assign({}, todo, {complete: !todo.complete})\n            )\n        case RECEIVE_DATA :\n            return action.todos\n        default :\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}